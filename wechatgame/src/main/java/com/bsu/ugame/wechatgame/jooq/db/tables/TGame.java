/*
 * This file is generated by jOOQ.
*/
package com.bsu.ugame.wechatgame.jooq.db.tables;


import com.bsu.ugame.wechatgame.jooq.db.Indexes;
import com.bsu.ugame.wechatgame.jooq.db.Keys;
import com.bsu.ugame.wechatgame.jooq.db.Login;
import com.bsu.ugame.wechatgame.jooq.db.tables.records.TGameRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TGame extends TableImpl<TGameRecord> {

    private static final long serialVersionUID = -1473762295;

    /**
     * The reference instance of <code>login.t_game</code>
     */
    public static final TGame T_GAME = new TGame();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TGameRecord> getRecordType() {
        return TGameRecord.class;
    }

    /**
     * The column <code>login.t_game.id</code>.
     */
    public final TableField<TGameRecord, UInteger> ID = createField("id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).identity(true), this, "");

    /**
     * The column <code>login.t_game.gamename</code>. 游戏名称
     */
    public final TableField<TGameRecord, String> GAMENAME = createField("gamename", org.jooq.impl.SQLDataType.VARCHAR(64), this, "游戏名称");

    /**
     * The column <code>login.t_game.gameappid</code>. 小游戏的appid
     */
    public final TableField<TGameRecord, String> GAMEAPPID = createField("gameappid", org.jooq.impl.SQLDataType.VARCHAR(64), this, "小游戏的appid");

    /**
     * The column <code>login.t_game.secrect</code>. 小游戏的secret
     */
    public final TableField<TGameRecord, String> SECRECT = createField("secrect", org.jooq.impl.SQLDataType.VARCHAR(64), this, "小游戏的secret");

    /**
     * The column <code>login.t_game.createTime</code>.
     */
    public final TableField<TGameRecord, Timestamp> CREATETIME = createField("createTime", org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * Create a <code>login.t_game</code> table reference
     */
    public TGame() {
        this(DSL.name("t_game"), null);
    }

    /**
     * Create an aliased <code>login.t_game</code> table reference
     */
    public TGame(String alias) {
        this(DSL.name(alias), T_GAME);
    }

    /**
     * Create an aliased <code>login.t_game</code> table reference
     */
    public TGame(Name alias) {
        this(alias, T_GAME);
    }

    private TGame(Name alias, Table<TGameRecord> aliased) {
        this(alias, aliased, null);
    }

    private TGame(Name alias, Table<TGameRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Login.LOGIN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.T_GAME_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TGameRecord, UInteger> getIdentity() {
        return Keys.IDENTITY_T_GAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TGameRecord> getPrimaryKey() {
        return Keys.KEY_T_GAME_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TGameRecord>> getKeys() {
        return Arrays.<UniqueKey<TGameRecord>>asList(Keys.KEY_T_GAME_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TGame as(String alias) {
        return new TGame(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TGame as(Name alias) {
        return new TGame(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TGame rename(String name) {
        return new TGame(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TGame rename(Name name) {
        return new TGame(name, null);
    }
}
