/*
 * This file is generated by jOOQ.
*/
package com.bsu.ugame.wechatgame.jooq.db.tables;


import com.bsu.ugame.wechatgame.jooq.db.Indexes;
import com.bsu.ugame.wechatgame.jooq.db.Keys;
import com.bsu.ugame.wechatgame.jooq.db.Login;
import com.bsu.ugame.wechatgame.jooq.db.tables.records.RChannelBoxRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RChannelBox extends TableImpl<RChannelBoxRecord> {

    private static final long serialVersionUID = 1651472798;

    /**
     * The reference instance of <code>login.r_channel_box</code>
     */
    public static final RChannelBox R_CHANNEL_BOX = new RChannelBox();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<RChannelBoxRecord> getRecordType() {
        return RChannelBoxRecord.class;
    }

    /**
     * The column <code>login.r_channel_box.id</code>.
     */
    public final TableField<RChannelBoxRecord, UInteger> ID = createField("id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).identity(true), this, "");

    /**
     * The column <code>login.r_channel_box.channelid</code>.
     */
    public final TableField<RChannelBoxRecord, UInteger> CHANNELID = createField("channelid", org.jooq.impl.SQLDataType.INTEGERUNSIGNED, this, "");

    /**
     * The column <code>login.r_channel_box.boxid</code>. 来源盒子id
     */
    public final TableField<RChannelBoxRecord, UInteger> BOXID = createField("boxid", org.jooq.impl.SQLDataType.INTEGERUNSIGNED, this, "来源盒子id");

    /**
     * Create a <code>login.r_channel_box</code> table reference
     */
    public RChannelBox() {
        this(DSL.name("r_channel_box"), null);
    }

    /**
     * Create an aliased <code>login.r_channel_box</code> table reference
     */
    public RChannelBox(String alias) {
        this(DSL.name(alias), R_CHANNEL_BOX);
    }

    /**
     * Create an aliased <code>login.r_channel_box</code> table reference
     */
    public RChannelBox(Name alias) {
        this(alias, R_CHANNEL_BOX);
    }

    private RChannelBox(Name alias, Table<RChannelBoxRecord> aliased) {
        this(alias, aliased, null);
    }

    private RChannelBox(Name alias, Table<RChannelBoxRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Login.LOGIN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.R_CHANNEL_BOX_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<RChannelBoxRecord, UInteger> getIdentity() {
        return Keys.IDENTITY_R_CHANNEL_BOX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<RChannelBoxRecord> getPrimaryKey() {
        return Keys.KEY_R_CHANNEL_BOX_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<RChannelBoxRecord>> getKeys() {
        return Arrays.<UniqueKey<RChannelBoxRecord>>asList(Keys.KEY_R_CHANNEL_BOX_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RChannelBox as(String alias) {
        return new RChannelBox(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RChannelBox as(Name alias) {
        return new RChannelBox(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public RChannelBox rename(String name) {
        return new RChannelBox(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public RChannelBox rename(Name name) {
        return new RChannelBox(name, null);
    }
}
