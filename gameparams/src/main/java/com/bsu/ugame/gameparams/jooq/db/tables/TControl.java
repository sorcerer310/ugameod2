/*
 * This file is generated by jOOQ.
*/
package com.bsu.ugame.gameparams.jooq.db.tables;


import com.bsu.ugame.gameparams.jooq.db.Gameparams;
import com.bsu.ugame.gameparams.jooq.db.Indexes;
import com.bsu.ugame.gameparams.jooq.db.Keys;
import com.bsu.ugame.gameparams.jooq.db.tables.records.TControlRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TControl extends TableImpl<TControlRecord> {

    private static final long serialVersionUID = 1572265406;

    /**
     * The reference instance of <code>gameparams.t_control</code>
     */
    public static final TControl T_CONTROL = new TControl();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TControlRecord> getRecordType() {
        return TControlRecord.class;
    }

    /**
     * The column <code>gameparams.t_control.id</code>.
     */
    public final TableField<TControlRecord, UInteger> ID = createField("id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).identity(true), this, "");

    /**
     * The column <code>gameparams.t_control.gameappid</code>. 游戏的appid
     */
    public final TableField<TControlRecord, String> GAMEAPPID = createField("gameappid", org.jooq.impl.SQLDataType.VARCHAR(50), this, "游戏的appid");

    /**
     * The column <code>gameparams.t_control.name</code>. 参数名，参数的功能名
     */
    public final TableField<TControlRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(20), this, "参数名，参数的功能名");

    /**
     * The column <code>gameparams.t_control.key</code>. 英文的参数名
     */
    public final TableField<TControlRecord, String> KEY = createField("key", org.jooq.impl.SQLDataType.VARCHAR(20), this, "英文的参数名");

    /**
     * The column <code>gameparams.t_control.memo</code>. 参数的注释
     */
    public final TableField<TControlRecord, String> MEMO = createField("memo", org.jooq.impl.SQLDataType.VARCHAR(200), this, "参数的注释");

    /**
     * The column <code>gameparams.t_control.default</code>. 参数的默认值
     */
    public final TableField<TControlRecord, String> DEFAULT = createField("default", org.jooq.impl.SQLDataType.VARCHAR(20), this, "参数的默认值");

    /**
     * The column <code>gameparams.t_control.type</code>. 参数类型(一般不会使用)
     */
    public final TableField<TControlRecord, String> TYPE = createField("type", org.jooq.impl.SQLDataType.VARCHAR(20), this, "参数类型(一般不会使用)");

    /**
     * The column <code>gameparams.t_control.length</code>. 参数长度(一般不会使用)
     */
    public final TableField<TControlRecord, Integer> LENGTH = createField("length", org.jooq.impl.SQLDataType.INTEGER, this, "参数长度(一般不会使用)");

    /**
     * Create a <code>gameparams.t_control</code> table reference
     */
    public TControl() {
        this(DSL.name("t_control"), null);
    }

    /**
     * Create an aliased <code>gameparams.t_control</code> table reference
     */
    public TControl(String alias) {
        this(DSL.name(alias), T_CONTROL);
    }

    /**
     * Create an aliased <code>gameparams.t_control</code> table reference
     */
    public TControl(Name alias) {
        this(alias, T_CONTROL);
    }

    private TControl(Name alias, Table<TControlRecord> aliased) {
        this(alias, aliased, null);
    }

    private TControl(Name alias, Table<TControlRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Gameparams.GAMEPARAMS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.T_CONTROL_GAMEAPPID, Indexes.T_CONTROL_GAMEAPPID_2, Indexes.T_CONTROL_GAMEAPPID_3, Indexes.T_CONTROL_GAMEAPPID_4, Indexes.T_CONTROL_GAMEAPPID_5, Indexes.T_CONTROL_GAMEAPPID_6, Indexes.T_CONTROL_I_GAMEAPPID, Indexes.T_CONTROL_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TControlRecord, UInteger> getIdentity() {
        return Keys.IDENTITY_T_CONTROL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TControlRecord> getPrimaryKey() {
        return Keys.KEY_T_CONTROL_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TControlRecord>> getKeys() {
        return Arrays.<UniqueKey<TControlRecord>>asList(Keys.KEY_T_CONTROL_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TControl as(String alias) {
        return new TControl(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TControl as(Name alias) {
        return new TControl(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TControl rename(String name) {
        return new TControl(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TControl rename(Name name) {
        return new TControl(name, null);
    }
}
