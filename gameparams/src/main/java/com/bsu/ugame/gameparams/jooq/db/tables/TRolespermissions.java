/*
 * This file is generated by jOOQ.
*/
package com.bsu.ugame.gameparams.jooq.db.tables;


import com.bsu.ugame.gameparams.jooq.db.Gameparams;
import com.bsu.ugame.gameparams.jooq.db.Indexes;
import com.bsu.ugame.gameparams.jooq.db.Keys;
import com.bsu.ugame.gameparams.jooq.db.tables.records.TRolespermissionsRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TRolespermissions extends TableImpl<TRolespermissionsRecord> {

    private static final long serialVersionUID = 1166505085;

    /**
     * The reference instance of <code>gameparams.t_rolespermissions</code>
     */
    public static final TRolespermissions T_ROLESPERMISSIONS = new TRolespermissions();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TRolespermissionsRecord> getRecordType() {
        return TRolespermissionsRecord.class;
    }

    /**
     * The column <code>gameparams.t_rolespermissions.id</code>.
     */
    public final TableField<TRolespermissionsRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>gameparams.t_rolespermissions.role_name</code>.
     */
    public final TableField<TRolespermissionsRecord, String> ROLE_NAME = createField("role_name", org.jooq.impl.SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>gameparams.t_rolespermissions.permission</code>.
     */
    public final TableField<TRolespermissionsRecord, String> PERMISSION = createField("permission", org.jooq.impl.SQLDataType.VARCHAR(100), this, "");

    /**
     * Create a <code>gameparams.t_rolespermissions</code> table reference
     */
    public TRolespermissions() {
        this(DSL.name("t_rolespermissions"), null);
    }

    /**
     * Create an aliased <code>gameparams.t_rolespermissions</code> table reference
     */
    public TRolespermissions(String alias) {
        this(DSL.name(alias), T_ROLESPERMISSIONS);
    }

    /**
     * Create an aliased <code>gameparams.t_rolespermissions</code> table reference
     */
    public TRolespermissions(Name alias) {
        this(alias, T_ROLESPERMISSIONS);
    }

    private TRolespermissions(Name alias, Table<TRolespermissionsRecord> aliased) {
        this(alias, aliased, null);
    }

    private TRolespermissions(Name alias, Table<TRolespermissionsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Gameparams.GAMEPARAMS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.T_ROLESPERMISSIONS_IDX_ROLES_PERMISSIONS, Indexes.T_ROLESPERMISSIONS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TRolespermissionsRecord, Long> getIdentity() {
        return Keys.IDENTITY_T_ROLESPERMISSIONS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TRolespermissionsRecord> getPrimaryKey() {
        return Keys.KEY_T_ROLESPERMISSIONS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TRolespermissionsRecord>> getKeys() {
        return Arrays.<UniqueKey<TRolespermissionsRecord>>asList(Keys.KEY_T_ROLESPERMISSIONS_PRIMARY, Keys.KEY_T_ROLESPERMISSIONS_IDX_ROLES_PERMISSIONS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TRolespermissions as(String alias) {
        return new TRolespermissions(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TRolespermissions as(Name alias) {
        return new TRolespermissions(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TRolespermissions rename(String name) {
        return new TRolespermissions(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TRolespermissions rename(Name name) {
        return new TRolespermissions(name, null);
    }
}
