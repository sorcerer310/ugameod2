/*
 * This file is generated by jOOQ.
*/
package com.bsu.ugame.gameparams.jooq.db.tables;


import com.bsu.ugame.gameparams.jooq.db.Gameparams;
import com.bsu.ugame.gameparams.jooq.db.Indexes;
import com.bsu.ugame.gameparams.jooq.db.Keys;
import com.bsu.ugame.gameparams.jooq.db.tables.records.TJumpdataRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TJumpdata extends TableImpl<TJumpdataRecord> {

    private static final long serialVersionUID = -1068678763;

    /**
     * The reference instance of <code>gameparams.t_jumpdata</code>
     */
    public static final TJumpdata T_JUMPDATA = new TJumpdata();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TJumpdataRecord> getRecordType() {
        return TJumpdataRecord.class;
    }

    /**
     * The column <code>gameparams.t_jumpdata.id</code>.
     */
    public final TableField<TJumpdataRecord, UInteger> ID = createField("id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).identity(true), this, "");

    /**
     * The column <code>gameparams.t_jumpdata.gameappid</code>.
     */
    public final TableField<TJumpdataRecord, String> GAMEAPPID = createField("gameappid", org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>gameparams.t_jumpdata.objectappid</code>.
     */
    public final TableField<TJumpdataRecord, String> OBJECTAPPID = createField("objectappid", org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>gameparams.t_jumpdata.usercount</code>.
     */
    public final TableField<TJumpdataRecord, Integer> USERCOUNT = createField("usercount", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>gameparams.t_jumpdata.createtime</code>.
     */
    public final TableField<TJumpdataRecord, Timestamp> CREATETIME = createField("createtime", org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * Create a <code>gameparams.t_jumpdata</code> table reference
     */
    public TJumpdata() {
        this(DSL.name("t_jumpdata"), null);
    }

    /**
     * Create an aliased <code>gameparams.t_jumpdata</code> table reference
     */
    public TJumpdata(String alias) {
        this(DSL.name(alias), T_JUMPDATA);
    }

    /**
     * Create an aliased <code>gameparams.t_jumpdata</code> table reference
     */
    public TJumpdata(Name alias) {
        this(alias, T_JUMPDATA);
    }

    private TJumpdata(Name alias, Table<TJumpdataRecord> aliased) {
        this(alias, aliased, null);
    }

    private TJumpdata(Name alias, Table<TJumpdataRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Gameparams.GAMEPARAMS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.T_JUMPDATA_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TJumpdataRecord, UInteger> getIdentity() {
        return Keys.IDENTITY_T_JUMPDATA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TJumpdataRecord> getPrimaryKey() {
        return Keys.KEY_T_JUMPDATA_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TJumpdataRecord>> getKeys() {
        return Arrays.<UniqueKey<TJumpdataRecord>>asList(Keys.KEY_T_JUMPDATA_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TJumpdata as(String alias) {
        return new TJumpdata(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TJumpdata as(Name alias) {
        return new TJumpdata(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TJumpdata rename(String name) {
        return new TJumpdata(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TJumpdata rename(Name name) {
        return new TJumpdata(name, null);
    }
}
